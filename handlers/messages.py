from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from parsers.cinema_parser import get_film_by_name

router = Router()

@router.message(Command("show_info_event"))
async def event_info(message: Message):
    title_film = message.text[len("/show_info_event "):].strip()

    if not title_film:
        await message.answer(
            "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: `/show_info_event –ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä`")
        return

    films = get_film_by_name(title_film)

    if not films:
        await message.answer(f"‚ùå –§–∏–ª—å–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{title_film}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        response_text = "üé¨ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:\n\n"
        for film in films:
            response_text += (
                f"üìå *–ù–∞–∑–≤–∞–Ω–∏–µ*: {film['title']}\n"
                f"üìñ *–û–ø–∏—Å–∞–Ω–∏–µ*: {film['description']}\n"
                f"üìÖ *–ì–æ–¥*: {film['year']}\n\n"
            )
        await message.answer(response_text, parse_mode="Markdown")

def register_handler(dp):
    dp.include_router(router)